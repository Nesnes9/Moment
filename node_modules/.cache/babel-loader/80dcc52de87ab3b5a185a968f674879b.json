{"ast":null,"code":"var _jsxFileName = \"/Users/nesrine/Downloads/films-master/src/FilmsCollection.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Card, CardHeader, CardActions, CardMedia, Button, LinearProgress } from '@material-ui/core';\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\nimport { ThumbDown, ThumbUp, Delete } from '@material-ui/icons';\n\nclass FilmsCollection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = () => {\n      if (this.props.data !== this.state.data) this.setState({\n        data: this.props.data\n      });\n    };\n\n    this.state = {\n      data: []\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.data.map(film => React.createElement(Card, {\n      style: styles.card,\n      elevation: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: film.title,\n      subheader: film.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(CardMedia, {\n      image: film.imageUrl,\n      title: film.title,\n      style: styles.media,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(CardActions, {\n      style: styles.actions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.props.deleteOne(film._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Delete, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(ToggleButtonGroup, {\n      style: styles.emotionButtons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      onClick: () => this.props.vote(film._id, 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ThumbUp, {\n      color: film.personalOpinion === 1 ? \"primary\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(LinearProgress, {\n      value: film.likes / (film.likes + film.dislikes) * 100,\n      variant: \"determinate\",\n      style: styles.ratioBar,\n      color: \"primary\",\n      classes: {\n        colorPrimary: classes.colorPrimary\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(ToggleButton, {\n      onClick: () => this.props.vote(film._id, 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ThumbDown, {\n      color: film.personalOpinion === 2 ? \"secondary\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start'\n  },\n  card: {\n    width: 300,\n    margin: 20,\n    flexBasis: '20%'\n  },\n  media: {\n    height: 400\n  },\n  actions: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  emotionButtons: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  ratioBar: {\n    width: 80,\n    margin: 5\n  }\n};\n\nconst classStyles = () => ({\n  colorPrimary: {\n    backgroundColor: 'red'\n  }\n});\n\nexport default withStyles(classStyles)(FilmsCollection);","map":{"version":3,"sources":["/Users/nesrine/Downloads/films-master/src/FilmsCollection.js"],"names":["React","Component","withStyles","Card","CardHeader","CardActions","CardMedia","Button","LinearProgress","ToggleButtonGroup","ToggleButton","ThumbDown","ThumbUp","Delete","FilmsCollection","constructor","props","componentDidUpdate","data","state","setState","render","classes","styles","container","map","film","card","title","category","imageUrl","media","actions","deleteOne","_id","emotionButtons","vote","personalOpinion","likes","dislikes","ratioBar","colorPrimary","display","flexWrap","justifyContent","width","margin","flexBasis","height","alignItems","classStyles","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Card,\n    CardHeader,\n    CardActions,\n    CardMedia,\n    Button,\n    LinearProgress,\n} from '@material-ui/core'\nimport {\n    ToggleButtonGroup,\n    ToggleButton,\n} from '@material-ui/lab'\nimport {\n    ThumbDown,\n    ThumbUp,\n    Delete,\n} from '@material-ui/icons'\n\nclass FilmsCollection extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: []\n        }\n    }\n\n    componentDidUpdate = () => {\n        if (this.props.data !== this.state.data) this.setState({data: this.props.data})\n    }\n\n    render() {\n        const { classes } = this.props\n\n        return (\n            <div style={styles.container}>\n                {\n                    this.state.data.map(film => <Card style={styles.card} elevation={24}>\n                        <CardHeader\n                            title={film.title}\n                            subheader={film.category}\n                        />\n                        <CardMedia\n                            image={film.imageUrl}\n                            title={film.title}\n                            style={styles.media}\n                        />\n                        <CardActions style={styles.actions}>\n                            <Button onClick={() => this.props.deleteOne(film._id)}><Delete/></Button>\n                            <ToggleButtonGroup style={styles.emotionButtons}>\n                                <ToggleButton onClick={() => this.props.vote(film._id, 1)}>\n                                    <ThumbUp\n                                        color={film.personalOpinion === 1 ? \"primary\" : \"\"}\n                                    />\n                                </ToggleButton>\n                                <LinearProgress\n                                    value={film.likes / (film.likes + film.dislikes) * 100}\n                                    variant={\"determinate\"}\n                                    style={styles.ratioBar}\n                                    color={\"primary\"}\n                                    classes={{\n                                        colorPrimary: classes.colorPrimary\n                                    }}\n                                />\n                                <ToggleButton onClick={() => this.props.vote(film._id, 2)}>\n                                    <ThumbDown\n                                        color={film.personalOpinion === 2 ? \"secondary\" : \"\"}\n                                    />\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                        </CardActions>\n                    </Card>)\n                }\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n    },\n    card: {\n        width: 300,\n        margin: 20,\n        flexBasis: '20%'\n    },\n    media: {\n        height: 400,\n    },\n    actions: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    emotionButtons: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    ratioBar: {\n        width: 80,\n        margin: 5,\n    },\n}\n\nconst classStyles = () => ({\n    colorPrimary: {\n        backgroundColor: 'red',\n    }\n})\n\nexport default  withStyles(classStyles)(FilmsCollection);\n"]},"metadata":{},"sourceType":"module"}